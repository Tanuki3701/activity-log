name: CI Dev Deployment (CI 開發部署)
on:
  push:
    branches: [ master ]  # 使用 master 分支

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare deployment
        run: echo "Deploying to dev environment"

      - name: Create dev release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: dev-v${{ github.run_id }}  # 使用運行 ID 生成唯一標籤
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          if [ -f build.zip ]; then
            gh release create "$TAG" build.zip --notes "$NOTE" --generate-notes || { echo "Release creation failed, skipping"; exit 0; }
          else
            echo "No build.zip found, skipping release"
            exit 0
          fi

  build:
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Simulate build
        run: |
          echo "Generating build artifact"
          zip -r build.zip . -x "*.git*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifact

      - name: Create staging release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: staging-v${{ github.run_id }}  # 使用運行 ID 生成唯一標籤
          NOTE: "Testing pre-production release"
        run: |
          cd ./artifact
          if [ -f build.zip ]; then
            gh release create "$TAG" build.zip --notes "$NOTE" --generate-notes || { echo "Release creation failed, skipping"; exit 0; }
          else
            echo "No build.zip found in artifact directory, skipping release"
            exit 0
          fi

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./artifact

      - name: Create production release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: prod-v${{ github.run_id }}  # 使用運行 ID 生成唯一標籤
          NOTE: "Production release"
        run: |
          cd ./artifact
          if [ -f build.zip ]; then
            gh release create "$TAG" build.zip --notes "$NOTE" --generate-notes || { echo "Release creation failed, skipping"; exit 0; }
          else
            echo "No build.zip found in artifact directory, skipping release"
            exit 0
          fi
